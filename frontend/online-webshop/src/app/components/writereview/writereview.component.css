.rating {
  display: flex;
  flex-direction: row-reverse;
  justify-content: center;
}

.rating>input {
  display: none;
}

.rating>label {
  position: relative;
  width: 1em;
  font-size: 2vw;
  color: #FFD600;
  cursor: pointer;
}

.rating>input:checked~label.yellow-star:before,
.rating>input:checked~label.yellow-star {
  opacity: 1;
  color: yellow;
}

.rating>label::before {
  content: "\2605";
  position: absolute;
  opacity: 0;
}

.rating>label:hover:before,
.rating>label:hover~label:before {
  opacity: 1 !important;
}

.rating:hover>input:checked~label:before {
  opacity: 0.4;
}

h1,
p {
  text-align: center;
}

h1 {
  margin-top: 150px;
}

p {
  font-size: 1.2rem;
}

@media only screen and (max-width: 600px) {
  h1 {
    font-size: 14px;
  }

  p {
    font-size: 12px;
  }
}

* {
  box-sizing: border-box;
}

html,
body {
  height: 100%;
}

body {

  background: #fdfdfd;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

h1 {
  font-family: 'Fjalla One', sans-serif;
  margin-bottom: 0.15rem;
}

h2 {
  font-family: 'Cutive Mono', 'Courier New';
  font-size: 1rem;
  letter-spacing: 1px;
  margin-bottom: 4rem;
}

label {
  cursor: pointer;
}

svg {
  width: 1.5rem;
  height: 1.5rem;
  padding: 0.15rem;
}


/* hide radio buttons */

input[name="rating"] {
  display: inline-block;
  width: 0;
  opacity: 0;
  margin-left: -2px;
}

/* hide source svg */

.rating-source {
  width: 0;
  height: 0;
  visibility: hidden;
}


/* set initial color to transparent so fill is empty*/

.rating {
  color: transparent;
  transition: color 0.2s ease-in-out;
}


/* set direction to row-reverse so 5th star is at the end and ~ can be used to fill all sibling stars that precede last starred element*/

.rating-container {
  display: flex;
  flex-direction: row-reverse;
  justify-content: start;
}

label:hover~label .rating,
svg.rating:hover,
input[name="rating"]:focus~label .rating,
input[name="rating"]:checked~label .rating {
  color: #5372F0 !important;
}

input[name="rating"]:checked+label .rating {
  animation: starred 0.5s;
}

input[name="rating"]:checked+label {
  animation: scaleup 1s;
}

@keyframes scaleup {
  from {
    transform: scale(1.2);
  }

  to {
    transform: scale(1);
  }
}

@keyframes starred {
  from {
    color: #5372F0 !important;
  }

  to {
    color: #5372F0 !important;
  }
}

.star-container input:checked+label svg .star {
  fill: url(#grad);
  /* Use the linear gradient as the fill */
}

.star-container input:hover+label svg .star {
  fill: url(#grad);
  /* Apply the linear gradient on hover as well */
}


